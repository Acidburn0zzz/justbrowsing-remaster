#!/bin/bash
####################
### squash-image ###
version="0.3" ######
### JustBrowsing ###
####################

ddimage=$(readlink -e "$1");
mountpoint=$(readlink -e "$2");
[ "$3" = "--noconfirm" ] && noAsk="true"

exit_status()
{
  echo "==> ERROR: $@";
  cd /
  sync; sleep 1; sync; sleep 1; sync;
  umount $mountpoint/* $mountpoint/ 2>&1 | grep -v "not mounted"
  exit 1;
}

check_depends()
{
  depends="basename dirname mksquashfs mount umount";
  for dep in $depends;
  do
    exists=$(which $dep 2>/dev/null);
    if [ -z "$exists" ]; then
      echo "==> MISSING: $dep not installed";
      missing="true";
    fi;
  done;

  if [ "$missing" = "true" ]; then
    exit_status "Missing dependencies";
  fi;
}


# Sanity check
if [ ! -f "$1" -o ! -d "$2" ]; then
  echo "USAGE: $(basename $0) [dd image] [mountpoint]";
  exit 1;
fi

# Mount image
[ -f "$ddimage" ] || exit_status "Image file does not exist"
[ -d "$mountpoint" ] || exit_status "Mount point does not exist"
checkEmpty=$(ls "$mountpoint" 2>/dev/null | wc -l);
[ "$checkEmpty" = "0" ] || exit_status "Mount point not empty"
mount "$ddimage" "$mountpoint" || exit_status "Unable to mount image"
cd "$mountpoint" || exit_status "Mount point I/O error"

# Delete user histories
echo "==> Deleting user histories"
rm ${mountpoint}/root/.bash_history 2>/dev/null;
rm ${mountpoint}/home/*/.bash_history 2>/dev/null;

# Disable Virtual Terminals
echo "==> Disabling VTs"
mv ${mountpoint}/root/10-disableVTs.conf ${mountpoint}/etc/X11/xorg.conf.d/ 2>/dev/null;

# Clean packages
echo "==> Cleaning package caches"
rm ${mountpoint}/var/cache/packer/* 2>/dev/null;
rm ${mountpoint}/var/cache/pacman/* 2>/dev/null;

# Clean logs
echo "==> Cleaning logs"
rm ${mountpoint}/var/log/faillog 2>/dev/null;
rm ${mountpoint}/var/log/restoreboot.log 2>/dev/null;
rm -r ${mountpoint}/var/log/journal/ 2>/dev/null;
rm -r ${mountpoint}/var/log/old/ 2>/dev/null;

# Clean firefox
rm -rf ${mountpoint}/home/*/.mozilla/firefox/*/bookmarkbackups
rm -rf ${mountpoint}/home/*/.mozilla/firefox/*/safebrowsing-backup
rm -f ${mountpoint}/home/*/.mozilla/firefox/*/adblock*/patterns-backup*ini
rm -f ${mountpoint}/home/*/.mozilla/firefox/*/sessionstore.js


# Allow squashfs boot
echo "==> Removing fstab and mtab"
mv ${mountpoint}/etc/fstab ${mountpoint}/etc/fstab.working 2>/dev/null;
mv ${mountpoint}/etc/mtab ${mountpoint}/etc/mtab.working 2>/dev/null;

# Unmount image
cd /
echo "";
if [ "$noAsk" != "true" ]; then
  read -p "Ready to build squashfs (y/N)?: " input;
  [[ "$input" = [yY] ]] || exit 0;
fi
sync; sleep 1; sync; sleep 1; sync;
umount $mountpoint/* $mountpoint 2>&1 | grep -v "not mounted"
checkEmpty=$(ls "$mountpoint" 2>/dev/null | wc -l);
[ "$checkEmpty" = "0" ] || exit_status "Unable to unmount the image"

# Squash filesystem
sFile=$(basename "$ddimage");
sParent=$(dirname "$ddimage");
sDir=$(basename "$sParent");
sGrandparent=$(dirname "$sParent");
[ "$sFile" = "root-image.fs" ] || exit_status "Image filename must be named: root-image.fs"
[ "$sDir" = "squashfs-root" ] || exit_status "Image directory must be named: squashfs-root"
mksquashfs "$sParent" "$sGrandparent"/${sFile}.sfs || exit_status "mksquashfs failed"
[ -f "$sGrandparent/${sFile}.sfs" ] && echo "[COMPLETE]"

### END ###
